"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _iterateJsdoc = _interopRequireDefault(require("../iterateJsdoc"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _iterateJsdoc.default)(({
  state,
  utils
}) => {
  const targetTagName = utils.getPreferredTagName({
    tagName: 'file'
  });
  const hasFileOverview = targetTagName && utils.hasTag(targetTagName);

  if (state.hasFileOverview) {
    state.hasDuplicate = hasFileOverview;
    return;
  }

  state.hasFileOverview = hasFileOverview;
}, {
  exit({
    state,
    utils
  }) {
    if (state.hasFileOverview && !state.hasDuplicate && !state.hasNonCommentBeforeFileOverview) {
      return;
    }

    const obj = utils.getPreferredTagNameObject({
      tagName: 'file'
    });

    if (obj && obj.blocked) {
      utils.reportSettings(`\`settings.jsdoc.tagNamePreference\` cannot block @${obj.tagName} ` + 'for the `require-file-overview` rule');
    } else {
      const targetTagName = obj && obj.replacement || obj;

      if (state.hasDuplicate) {
        utils.reportSettings(`Duplicate @${targetTagName}`);
      } else if (state.hasFileOverview && state.hasNonCommentBeforeFileOverview) {
        utils.reportSettings(`@${targetTagName} should be at the beginning of the file`);
      } else {
        utils.reportSettings(`Missing @${targetTagName}`);
      }
    }
  },

  iterateAllJsdocs: true,
  meta: {
    fixable: 'code',
    type: 'suggestion'
  },

  nonComment({
    state
  }) {
    state.hasNonCommentBeforeFileOverview = !state.hasFileOverview;
  }

});

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=requireFileOverview.js.map