{"version":3,"sources":["../../src/rules/checkParamNames.js"],"names":["validateParameterNames","targetTagName","allowExtraTrailingParamDocs","functionParameterNames","jsdoc","jsdocNode","utils","report","tags","paramTags","filter","tag","name","includes","some","index","tagsIndex","dupeTagInfo","find","tgsIndex","tg","idx","reportJSDoc","splice","functionParameterName","trim","expectedNames","join","actualNames","map","validateParameterNamesDeep","jsdocParameterNames","lastRealParameter","jsdocParameterName","isPropertyPath","pathRootNodeName","slice","indexOf","endsWith","context","options","jsdocParameterNamesDeep","getJsdocParameterNamesDeep","getFunctionParameterNames","getPreferredTagName","tagName","isError","meta","fixable","schema","additionalProperties","properties","type"],"mappings":"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","sourcesContent":["import entries from 'object.entries-ponyfill';\nimport iterateJsdoc from '../iterateJsdoc';\n\nconst validateParameterNames = (\n  targetTagName : string, allowExtraTrailingParamDocs: boolean,\n  functionParameterNames : Array<string>, jsdoc, jsdocNode, utils, report,\n) => {\n  if (!jsdoc || !jsdoc.tags) {\n    return false;\n  }\n\n  const paramTags = entries(jsdoc.tags).filter(([, tag]) => {\n    return tag.tag === targetTagName && !tag.name.includes('.');\n  });\n\n  return paramTags.some(([, tag], index) => {\n    let tagsIndex;\n    const dupeTagInfo = paramTags.find(([tgsIndex, tg], idx) => {\n      tagsIndex = tgsIndex;\n\n      return tg.name === tag.name && idx !== index;\n    });\n    if (dupeTagInfo) {\n      utils.reportJSDoc(`Duplicate @${targetTagName} \"${tag.name}\"`, dupeTagInfo[1], () => {\n        jsdoc.tags.splice(tagsIndex, 1);\n      });\n\n      return true;\n    }\n    const functionParameterName = functionParameterNames[index];\n\n    if (!functionParameterName) {\n      if (allowExtraTrailingParamDocs) {\n        return false;\n      }\n\n      report(\n        `@${targetTagName} \"${tag.name}\" does not match an existing function parameter.`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    if (functionParameterName === '<ObjectPattern>' || functionParameterName === '<ArrayPattern>') {\n      return false;\n    }\n\n    if (functionParameterName !== tag.name.trim()) {\n      const expectedNames = functionParameterNames.join(', ');\n      const actualNames = paramTags.map(([, {name}]) => {\n        return name.trim();\n      }).join(', ');\n\n      report(\n        `Expected @${targetTagName} names to be \"${expectedNames}\". Got \"${actualNames}\".`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    return false;\n  });\n};\n\nconst validateParameterNamesDeep = (\n  targetTagName : string, allowExtraTrailingParamDocs: boolean,\n  jsdocParameterNames : Array<string>, jsdoc, report : Function,\n) => {\n  let lastRealParameter;\n\n  return jsdocParameterNames.some((jsdocParameterName, idx) => {\n    const isPropertyPath = jsdocParameterName.includes('.');\n\n    if (isPropertyPath) {\n      if (!lastRealParameter) {\n        report(`@${targetTagName} path declaration (\"${jsdocParameterName}\") appears before any real parameter.`, null, jsdoc.tags[idx]);\n\n        return true;\n      }\n\n      let pathRootNodeName = jsdocParameterName.slice(0, jsdocParameterName.indexOf('.'));\n\n      if (pathRootNodeName.endsWith('[]')) {\n        pathRootNodeName = pathRootNodeName.slice(0, -2);\n      }\n\n      if (pathRootNodeName !== lastRealParameter) {\n        report(\n          `@${targetTagName} path declaration (\"${jsdocParameterName}\") root node name (\"${pathRootNodeName}\") ` +\n          `does not match previous real parameter name (\"${lastRealParameter}\").`,\n          null,\n          jsdoc.tags[idx],\n        );\n\n        return true;\n      }\n    } else {\n      lastRealParameter = jsdocParameterName;\n    }\n\n    return false;\n  });\n};\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  jsdocNode,\n  report,\n  utils,\n}) => {\n  const {allowExtraTrailingParamDocs} = context.options[0] || {};\n\n  const jsdocParameterNamesDeep = utils.getJsdocParameterNamesDeep();\n  if (!jsdocParameterNamesDeep) {\n    return;\n  }\n  const functionParameterNames = utils.getFunctionParameterNames();\n  const targetTagName = utils.getPreferredTagName({tagName: 'param'});\n  const isError = validateParameterNames(\n    targetTagName, allowExtraTrailingParamDocs, functionParameterNames,\n    jsdoc, jsdocNode, utils, report,\n  );\n\n  if (isError) {\n    return;\n  }\n\n  validateParameterNamesDeep(\n    targetTagName, allowExtraTrailingParamDocs, jsdocParameterNamesDeep,\n    jsdoc, report,\n  );\n}, {\n  meta: {\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowExtraTrailingParamDocs: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"checkParamNames.js"}